#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<unistd.h>
int show_board(char c_b[8][8]);
int move(char c_b[8][8], int s_pos[2], int d_pos[2]);
int check(char c_b[8][8], int s_pos[2], int d_pos[2]);
int error();
int main(){
  //First create chess board;
  char c_b[8][8] = {{'r', 'h', 'b', 'k', 'q', 'b', 'h', 'r'},
                    {'p','p','p','p','p','p','p','p'},
                    {' ',' ',' ',' ',' ',' ',' ',' '},
                    {' ',' ',' ',' ',' ',' ',' ',' '},
                    {' ',' ',' ',' ',' ',' ',' ',' '},
                    {' ',' ',' ',' ',' ',' ',' ',' '},
                    {'P','P','P','P','P','P','P','P'},
                    {'R','H','B','K','Q','B','H','R',}};
  
  int over = 0;
  
  
  int P1_s[2], P1_d[2], P2_s[2], P2_d[2];
  
  scanf("Player 1 : (%d, %d) -> (%d, %d)", &P1_s[0], &P1_s[1], &P1_d[0], &P1_d[1]);
  
  check(c_b, P1_s, P1_d);
  
  
  scanf("Player 2 : (%d, %d)", &P2_s[0], &P2_d[1]);
      
      

  
  
  
  
}
int show_board(char c_b[8][8]){
  system("clear");
  for(int i = 0; i < 8; i++){
    
    for(int j = 0; j < 8; j++){
      if(j <= 6){
        printf("%c  |  ", c_b[i][j]);
      }
      else{
        printf("%c |   %d", c_b[i][j], i + 1);
      }
      
      
    
  }
    printf("\n");
    printf("--- ----- ----- ----- ----- ----- ----- ----");
    printf("\n");
    printf("\n");
  }
  for(int k = 0; k < 8; k++){
    
    printf("%d     ", k + 1);
  }
  printf("\n");
  
}
int move(char c_b[8][8], int s_pos[2], int d_pos[2]){
  char piece =  c_b[s_pos[0]-1][s_pos[1]-1];
 
  c_b[d_pos[0]-1][d_pos[1]-1] = piece;
  
  c_b[s_pos[0]-1][s_pos[1]-1] = ' ';
  
}

int check(char c_b[8][8], int s_pos[2], int d_pos[2]){
    
    int t = 0;
    int x_s = s_pos[0]-1, y_s = s_pos[1]-1, x_d = d_pos[0] - 1, y_d = d_pos[1] - 1;
    
    //Pawn Conditions :
    

    
    if(c_b[x_s][y_s] == 'p'){

        if(y_s == 6){
            
            if(y_d == 5 || y_d == 4){
                
                t = 1;
            }
            
        }
        else{
            
            if(y_d == y_s - 1){
                
                t = 1;
            }
            else{
                error();
            }
        }
        
        

    }
    
    else if(c_b[x_s][y_s] == 'P'){
        
        if(y_s == 1){
            
            if(y_d == 2 || y_d == 3){
                
                t = 1;
            }
            
        }
        else{
            
            if(y_d == y_s + 1){
                
                t = 1;
            }
            else{
                
                error();
            }
        }
    }
}

int error(){
    
    printf("ERROR");
}
  c_b[s_pos[0]-1][s_pos[1]-1] = ' ';


  
}
